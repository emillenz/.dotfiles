#!/usr/bin/env bb

;; ---
;; title:  switch audio output menu
;; author: emil lenz
;; email:  emillenz@protonmail.com
;; date:   [2024-12-06] ([2023-05-07] init ruby version)
;; info: 
;;   - intended for use with a WM
;;   - ARGV passed as args to dmenu (use it to customize dmenu appearance)
;; dependencies: dmenu, pactl
;; ---

(require '[babashka.process :as ps] 
	 '[clojure.string :as str] 
	 '[cheshire.core :as json])

(defn sinks []
      (->> (ps/shell {:out :string} "pactl" "--format" "json" "list" "sinks")
	   ps/check
	   :out
	   json/parse-string))

(defn sink-inputs []
      (->> (ps/shell {:out :string} "pactl" "--format" "json" "list" "sink-inputs")
	   ps/check
	   :out
	   json/parse-string))

(defn select-sink [sinks]
      (->> (apply ps/process
		  {:in (->> sinks
			    (map #(get % "description"))
			    (str/join "\n"))
		  :out :string}
		  "dmenu"
		  "-p" "device >"
		  *command-line-args*)
	   ps/check
	   :out
	   str/trim))

(defn sink-id [sinks selected-sink]
      (get (->> sinks
		(filter (fn [sink]
			    (= (get sink "description")
			       selected-sink)))
		first)
	   "index"))

(defn main []
      (let [sinks (sinks)
		  sink-inputs (sink-inputs)
		  selected-sink (select-sink sinks)
		  sink-id (sink-id sinks selected-sink)]

	(ps/shell "pactl" "set-default-sink" sink-id)

	(doseq [sink sink-inputs]
	       (ps/shell "pactl" "move-sink-input" (get sink "index") sink-id))

	(ps/shell "dunstify" "audio-output changed" selected-sink)))

(main)
