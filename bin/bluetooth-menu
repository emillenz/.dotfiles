#!/usr/bin/env ruby

# ---
# title:  connect to paired bluetooth device menu
# author: emil lenz
# email:  emillenz@protonmail.com
# date:   [2024-05-26]
# dependecies: bluetoothctl, dmenu, dunst
# info: 
#   - intended for use with a WM
#   - ARGV passed as args to dmenu (use it to customize dmenu appearance)
# ---

require "open3"

def main
	devices_addrs = `bluetoothctl devices`.split("\n").map do |line|
		words = line.split
		device = words[2..].join(" ")
		addr = words[1]
		[device, addr]
	end.to_h

	selected, status = Open3.capture2(
		"dmenu", "-p", "bluetooth-device >", *ARGV,
		stdin_data: devices_addrs.keys.push("off").join("\n")
	)
	selected = selected.chomp
	exit(1) unless status.success?

	if selected == "off"
		poweroff 
	else 
		connect(selected, devices_addrs)
	end
end

def connect(device, devices_addrs)
	system("bluetoothctl power on", exception: true)
	system("bluetoothctl connect '#{devices_addrs[device]}'", exception: true)
	system("dunstify 'bluetooth connected' '#{device}'", exception: true)
end

def poweroff
	system("bluetoothctl power off", exception: true)
	system("dunstify 'bluetooth: off'", exception: true)
end

main
